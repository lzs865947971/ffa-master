<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ffa.dao.UserInfMapper">
  <resultMap id="BaseResultMap" type="com.ffa.po.UserInf">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="enabled" jdbcType="TINYINT" property="enabled" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="unit_name" jdbcType="VARCHAR" property="unitName" />
  </resultMap>
  <resultMap id="UserWithRoles" type="com.ffa.po.UserInf" extends="BaseResultMap">
    <collection property="roles" ofType="com.ffa.po.Role">
      <id column="rid" property="id"/>
      <result column="rname" property="name"/>
      <result column="rnameZh" property="nameZh"/>
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, password, name, tel, email, enabled, unit_id, unit_name
  </sql>
  <select id="getAllUsersExceptCurrentHr" resultMap="BaseResultMap">
        select * from user_inf where user_id !=#{id};
    </select>
  <update id="updatePasswd">
        update user_inf set password = #{encodePass} where user_id=#{uid};
    </update>

  <select id="getAllUsers" resultMap="UserWithRoles">
    select user_inf.user_id, user_inf.user_name, user_inf.name, user_inf.tel, user_inf.email, user_inf.enabled, user_inf.unit_id, user_inf.unit_name,
    r.`id` as rid,r.`name` as rname,r.`nameZh` as rnameZh from user_inf left join user_role hrr on
    hr.`id`=hrr.`uid` left join role r on hrr.`rid`=r.`id` where hr.`id`!=#{uid}
    <if test="keywords!=null">
      and user_inf.name like '%${keywords}%'
    </if>
    order by user_inf.user_id
  </select>
  <select id="getUserRolesById" resultType="com.ffa.po.Role">
    select r.* from role r,user_role hrr where hrr.`rid`=r.`id` and hrr.`uid`=#{id}
  </select>
<select id="loadUserByUsername" resultMap="BaseResultMap">
    select * from user_inf where user_name=#{username}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_inf
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_inf
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ffa.po.UserInf">
    insert into user_inf (user_id, user_name, password,
      name, tel, email, enabled,
      unit_id, unit_name)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{enabled,jdbcType=TINYINT},
      #{unitId,jdbcType=INTEGER}, #{unitName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ffa.po.UserInf">
    insert into user_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="unitName != null">
        unit_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=TINYINT},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="unitName != null">
        #{unitName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ffa.po.UserInf">
    update user_inf
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=TINYINT},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="unitName != null">
        unit_name = #{unitName,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ffa.po.UserInf">
    update user_inf
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=TINYINT},
      unit_id = #{unitId,jdbcType=INTEGER},
      unit_name = #{unitName,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>
